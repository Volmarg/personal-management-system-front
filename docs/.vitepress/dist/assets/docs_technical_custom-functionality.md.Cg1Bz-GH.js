import{_ as i,c as e,o as a,a4 as t}from"./chunks/framework.D3NWZHxC.js";const k=JSON.parse('{"title":"Custom functionality","description":"","frontmatter":{},"headers":[],"relativePath":"docs/technical/custom-functionality.md","filePath":"docs/technical/custom-functionality.md"}'),n={name:"docs/technical/custom-functionality.md"};function o(l,s,r,d,h,p){return a(),e("div",null,s[0]||(s[0]=[t(`<h1 id="custom-functionality" tabindex="-1">Custom functionality <a class="header-anchor" href="#custom-functionality" aria-label="Permalink to &quot;Custom functionality&quot;">​</a></h1><p>There are a lot of customisations on both sides.</p><p>Here are some of the most important ones.</p><h2 id="backend" tabindex="-1">Backend <a class="header-anchor" href="#backend" aria-label="Permalink to &quot;Backend&quot;">​</a></h2><ul><li><code>App\\Response\\Base\\BaseResponse</code> is used for building frontend response, has access to <code>toJsonResponse</code>,</li><li><code>ArrayHandler</code> can be used for reading out frontend requests data, example:</li></ul><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$dataArray </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RequestService</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tryFromJsonBody</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($request);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$login     </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayHandler</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($dataArray, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;login&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$url       </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayHandler</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($dataArray, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;url&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="frontend" tabindex="-1">Frontend <a class="header-anchor" href="#frontend" aria-label="Permalink to &quot;Frontend&quot;">​</a></h2><p><strong>this</strong></p><p>Context of <strong>Vue</strong> <code>this</code> has been extended:</p><ul><li><code>this.$axios</code> - ajax calls,</li><li><code>this.$moduleCall</code> - handler for the <code>backend pattern routes</code>,</li><li><code>this.$rootEvent</code> - accessing events that are otherwise present only on app / root page component,</li><li><code>this.$view</code> - handling user view (scrolling etc.),</li></ul><p><strong>Translations</strong></p><p>Translations can be added to any new translation file inside: <code>src/translations/en-US</code>, there is ofc. limitation to how deeply You can nest the files.</p><p><strong>Throwing error</strong></p><p>Use <code>BaseError</code> for throwing errors.</p><p><strong>Logging</strong></p><p>Use <code>Logger.ts</code> for logging, since it has built in logic that will log some errors only on <code>dev-mode</code>, else You&#39;ll end up with errors on prod mode as well.</p>`,16)]))}const g=i(n,[["render",o]]);export{k as __pageData,g as default};
