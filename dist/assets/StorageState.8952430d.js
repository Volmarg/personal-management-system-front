import{S as e,aE as s,a2 as a,aF as t}from"./index.db8bde11.js";const E=class extends e{};let l=E;l.FOLDER_BASE_URL="/module/storage/folder",l.FOLDER_CREATE_URL=E.FOLDER_BASE_URL+"/create",l.FOLDER_RENAME_URL=E.FOLDER_BASE_URL+"/rename",l.FOLDER_REMOVE_URL=E.FOLDER_BASE_URL+"/remove",l.FOLDER_MOVE_OR_COPY_URL=E.FOLDER_BASE_URL+"/move-or-copy",l.FOLDER_TOGGLE_LOCK_URL=E.FOLDER_BASE_URL+"/toggle-lock",l.FOLDER_UPDATE_META_DATA=E.FOLDER_BASE_URL+"/folder-meta-data",l.FILE_BASE_URL="/module/storage/file",l.FILE_UPDATE_URL=E.FILE_BASE_URL+"/update",l.FILE_REMOVE_URL=E.FILE_BASE_URL+"/remove",l.FILE_MOVE_URL=E.FILE_BASE_URL+"/move";var _,L=((_=L||{})[_.files=0]="files",_[_.videos=1]="videos",_[_.images=2]="images",_);const R=s("storageModuleState",{state:()=>({activeNodeData:{},selectedFilesData:[],allEntries:[],moduleName:null,uploadConfigId:null}),actions:{async getAll(){if(!this.moduleName)throw new a("moduleName is not set!");this.allEntries=await(new t).getAll(l.FOLDER_BASE_URL,this.moduleName)},async clearSelectedFiles(){this.selectedFilesData=[]},async selectFile(e){this.selectedFilesData.push(e)},async deselectFile(e){let s=[];for(let a of this.selectedFilesData)JSON.stringify(a)!==JSON.stringify(e)&&s.push(a);this.selectedFilesData=s}}});export{L as S,R as a,l as b};
