import{S as e,aE as t,aF as n,a2 as r}from"./index.96856189.js";class l extends e{}l.NOTES_CATEGORIES_BASE_URL="/module/my-notes-categories",l.NOTES_BASE_URL="/module/my-notes";const i=t("NotesCategoriesModuleStateStore",{state:()=>({allEntries:[]}),actions:{async getAll(){this.allEntries=await(new n).getAll(l.NOTES_CATEGORIES_BASE_URL)},findCategory(e){let t=this.allEntries.find((t=>t.id==e));if(!t)throw new r(`No category found for id: ${e}`);return t},getNestedCategories(){let e=[...this.allEntries];e.sort(((e,t)=>{var n,r;return(null!=(n=e.parentId)?n:0)-(null!=(r=t.parentId)?r:0)}));for(let t in e){let n=e[t];if(!n.parentId)continue;let r=e.findIndex((e=>e.id===n.parentId));if(-1===r)continue;let l=e[r];l.children||(l.children=[]),n.isMovedToParent=!0,l.children.find((e=>e.id===n.id))||l.children.push(n)}for(let t in e)e[t].isMovedToParent&&delete e[t];return e.filter(Boolean)},getCategoryNestingLevel(e,t=null){null===t&&(t=0);let n=this.getParentCategory(e);return n&&(t++,t=this.getCategoryNestingLevel(n.parentId,t)),t},getParentCategory(e){var t;return null!=(t=this.allEntries.find((t=>t.id==e)))?t:null}}});export{i as C,l as S};
