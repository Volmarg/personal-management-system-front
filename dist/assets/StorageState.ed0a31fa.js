import{S as e,aE as s,c as t,a2 as i,aF as o}from"./index.96856189.js";const a=class extends e{};let l=a;l.FOLDER_BASE_URL="/module/storage/folder",l.FOLDER_CREATE_URL=a.FOLDER_BASE_URL+"/create",l.FOLDER_RENAME_URL=a.FOLDER_BASE_URL+"/rename",l.FOLDER_REMOVE_URL=a.FOLDER_BASE_URL+"/remove",l.FOLDER_MOVE_OR_COPY_URL=a.FOLDER_BASE_URL+"/move-or-copy",l.FOLDER_TOGGLE_LOCK_URL=a.FOLDER_BASE_URL+"/toggle-lock",l.FOLDER_UPDATE_META_DATA=a.FOLDER_BASE_URL+"/folder-meta-data",l.FILE_BASE_URL="/module/storage/file",l.FILE_UPDATE_URL=a.FILE_BASE_URL+"/update",l.FILE_REMOVE_URL=a.FILE_BASE_URL+"/remove",l.FILE_MOVE_URL=a.FILE_BASE_URL+"/move";var r,d=((r=d||{})[r.files=0]="files",r[r.videos=1]="videos",r[r.images=2]="images",r);const E=s("storageModuleState",{state:()=>({openTreeNodes:[],activeNodeData:{},selectedFilesData:[],allEntries:[],moduleName:null,uploadConfigId:null}),actions:{clearOpenTreeNodes(){this.openTreeNodes=[]},isTreeNodeOpen(e){if(t.isEmptyString(e))throw new i("Provided string is empty!");return this.openTreeNodes.includes(e)},addOpenTreeNode(e){if(t.isEmptyString(e))throw new i("Provided string is empty!");this.openTreeNodes.includes(e)||this.openTreeNodes.push(e)},removeOpenTreeNode(e){if(t.isEmptyString(e))throw new i("Provided string is empty!");if(!this.openTreeNodes.includes(e))return;let s=this.openTreeNodes.findIndex((s=>s===e));delete this.openTreeNodes[s],this.openTreeNodes=this.openTreeNodes.filter(Boolean)},async getAll(){if(!this.moduleName)throw new i("moduleName is not set!");this.allEntries=await(new o).getAll(l.FOLDER_BASE_URL,this.moduleName)},async clearSelectedFiles(){this.selectedFilesData=[]},async selectFile(e){this.selectedFilesData.push(e)},async deselectFile(e){let s=[];for(let t of this.selectedFilesData)JSON.stringify(t)!==JSON.stringify(e)&&s.push(t);this.selectedFilesData=s}}});export{d as S,E as a,l as b};
