import{aE as e,aF as t,_ as n,aK as l,c as s,r as a,o,Y as i}from"./index.7d9fe974.js";import{S as r}from"./SymfonyPaymentsRoutes.a2babd69.js";const d=e("paymentsSettingsTypeState",{state:()=>({allEntries:[]}),actions:{async getAll(){this.allEntries=await(new t).getAll(r.SETTINGS_PAYMENT_TYPE_BASE_URL)}}});var c=n({data:()=>({allTypes:[],store:null,selected:null}),components:{MultiSelect:l},emits:["change"],computed:{options(){let e=[],t=[];for(let n of this.allTypes)t.includes(n.id)||(e.push({label:s.ucFirst(n.name),value:n.id}),t.push(n.id));return e}},methods:{onOptionChanged(e){this.selected=e,this.$emit("update:modelValue",e),this.$emit("change",e)}},async beforeMount(){this.store=d(),await this.store.getAll(),this.allTypes=this.store.allEntries},watch:{"store.allEntries":{deep:!0,handler:async function(){this.allTypes=this.store.allEntries}}}},[["render",function(e,t,n,l,s,r){const d=a("MultiSelect");return o(),i(d,{label:e.$t("payments.monthly.newForm.type.label"),options:r.options,onChange:r.onOptionChanged,onSelect:r.onOptionChanged,onDeselect:r.onOptionChanged,onClear:r.onOptionChanged,onPaste:r.onOptionChanged,modelValue:s.selected,"onUpdate:modelValue":t[0]||(t[0]=e=>s.selected=e),mode:"single","allow-show-options-list":!0,"allow-create-options":!1,"can-clear":!0,required:!0,ref:"multiselect"},null,8,["label","options","onChange","onSelect","onDeselect","onClear","onPaste","modelValue"])}]]);export{d as P,c as T};
